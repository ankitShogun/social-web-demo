{
  "openapi": "3.0.0",
  "servers": [
    {
      "url": "https://api.dsnp-social-web.becknprotocol.io"
    }
  ],
  "info": {
    "title": "DSNP Gateway Prototype API Documentation",
    "version": "1.0.0"
  },
  "paths": {
    "/v1/auth/challenge": {
      "get": {
        "operationId": "authChallenge",
        "summary": "Return a challenge for login",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChallengeResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/provider": {
      "get": {
        "operationId": "authProvider",
        "summary": "Return the delegation and provider information",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProviderResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/login": {
      "post": {
        "operationId": "authLogin",
        "summary": "Use a challenge to login",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/assert": {
      "post": {
        "operationId": "authAssert",
        "summary": "Returns 204 No Content if the caller's token is valid, 401 Unauthorized if not",
        "security": [{
          "tokenAuth": []
        }],
        "responses": {
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "204": {
            "description": "Successful response"
          }
        }
      }
    },
    "/v1/auth/logout": {
      "post": {
        "operationId": "authLogout",
        "summary": "Logout and invalidate the access token",
        "security": [{
          "tokenAuth": []
        }],
        "responses": {
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "201": {
            "description": "Successful response"
          }
        }
      }
    },
    "/v1/auth/create": {
      "post": {
        "operationId": "authCreate",
        "summary": "Creates a new DSNP Identity",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateIdentityRequest"
              }
            }
          }
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateIdentityResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/account": {
      "get": {
        "operationId": "authAccount",
        "summary": "For polling to get the created account as authCreate can take time",
        "security": [{
          "tokenAuth": []
        }],
        "responses": {
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "202": {
            "description": "Account still pending creation"
          },
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthAccountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/handles": {
      "post": {
        "operationId": "authHandles",
        "summary": "Get handles for public keys",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "Public key to fetch a handle"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response of accounts with handles",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HandlesResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/delegate": {
      "post": {
        "operationId": "authDelegate",
        "summary": "Delegate to the provider with an existing DSNP Identity",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DelegateRequest"
              }
            }
          }
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DelegateResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/content/{dsnpId}": {
      "get": {
        "operationId": "getUserFeed",
        "summary": "Get recent posts from a user, paginated",
        "security": [{
          "tokenAuth": []
        }],
        "parameters": [
          {
            "name": "dsnpId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "newestBlockNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "oldestBlockNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedBroadcast"
                }
              }
            }
          }
        }
      }
    },
    "/v1/content/feed": {
      "get": {
        "operationId": "getFeed",
        "summary": "Get the Feed for the current user, paginated",
        "security": [{
          "tokenAuth": []
        }],
        "parameters": [
          {
            "name": "newestBlockNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "oldestBlockNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedBroadcast"
                }
              }
            }
          }
        }
      }
    },
    "/v1/content/discover": {
      "get": {
        "operationId": "getDiscover",
        "summary": "Get the Discovery Feed for the current user, paginated",
        "security": [{
          "tokenAuth": []
        }],
        "parameters": [
          {
            "name": "newestBlockNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "oldestBlockNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedBroadcast"
                }
              }
            }
          }
        }
      }
    },
    "/v1/content/interactions": {
      "get": {
        "operationId": "getInteractionsFeed",
        "summary": "Get the feed of posts with interaction tags of a given attribute set type and URL, paginated.",
        "parameters": [
          {
            "name": "newestBlockNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "oldestBlockNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "rel",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "href",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedBroadcast"
                }
              }
            }
          }
        }
      }
    },
    "/v1/content/create": {
      "post": {
        "operationId": "createBroadcast",
        "summary": "Create a new post",
        "security": [{
          "tokenAuth": []
        }],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CreatePostRequest"
              }
            }
          }
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BroadcastExtended"
                }
              }
            }
          }
        }
      }
    },
    "/v1/content/{dsnpId}/{contentHash}": {
      "get": {
        "operationId": "getContent",
        "summary": "Get details of a specific post",
        "security": [{
          "tokenAuth": []
        }],
        "parameters": [
          {
            "name": "dsnpId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contentHash",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BroadcastExtended"
                }
              }
            }
          },
          "404": {
            "description": "Content not found"
          }
        }
      }
    },
    "/v1/content/{type}/{contentHash}": {
      "put": {
        "operationId": "editContent",
        "security": [{
          "tokenAuth": []
        }],
        "summary": "Edit the content of a specific post",
        "parameters": [
          {
            "name": "contentHash",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "description": "Broadcast or Reply",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditPostRequest"
              }
            }
          }
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BroadcastExtended"
                }
              }
            }
          }
        }
      }
    },
    "/v1/graph/{dsnpId}/following": {
      "get": {
        "operationId": "userFollowing",
        "summary": "Get a list of users that a specific user follows",
        "security": [{
          "tokenAuth": []
        }],
        "parameters": [
          {
            "name": "dsnpId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "description": "Array of DSNP Ids",
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/graph/{dsnpId}/follow": {
      "post": {
        "operationId": "graphFollow",
        "summary": "Follow a user",
        "security": [{
          "tokenAuth": []
        }],
        "parameters": [
          {
            "name": "dsnpId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "201": {
            "description": "Successful response"
          }
        }
      }
    },
    "/v1/graph/{dsnpId}/unfollow": {
      "post": {
        "operationId": "graphUnfollow",
        "summary": "Unfollow a user",
        "security": [{
          "tokenAuth": []
        }],
        "parameters": [
          {
            "name": "dsnpId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "201": {
            "description": "Successful response"
          }
        }
      }
    },
    "/v1/profiles/{dsnpId}": {
      "get": {
        "operationId": "getProfile",
        "summary": "Get profile information for a specific user",
        "security": [{
          "tokenAuth": []
        }],
        "parameters": [
          {
            "name": "dsnpId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profile"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "createProfile",
        "summary": "Create/Edit the profile information for a current user",
        "security": [{
          "tokenAuth": []
        }],
        "parameters": [
          {
            "name": "dsnpId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditProfileRequest"
              }
            }
          }
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profile"
                }
              }
            }
          }
        }
      }
    },
    "/v1/interactions": {
      "post": {
        "operationId": "submitInteraction",
        "summary": "Request attestation for a pseudonymous interaction claim",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InteractionRequest"
              }
            }
          }
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InteractionResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes":{
    "tokenAuth": {
      "type": "http",
      "scheme": "bearer",
      "bearerFormat": "accessToken"
      }
    },
    "responses": {
      "UnauthorizedError": {
        "description": "Access token invalid or not found"
      }
    },
    "schemas": {
      "ProviderResponse": {
        "type": "object",
        "properties": {
          "nodeUrl": {
            "type": "string"
          },
          "ipfsGateway": {
            "description": "IPFS Path Style Gateway base URI",
            "type": "string"
          },
          "providerId": {
            "type": "string"
          },
          "schemas": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "network": {
            "type": "string",
            "enum": [
              "local",
              "testnet",
              "mainnet"
            ]
          }
        },
        "required": [
          "nodeUrl",
          "providerId",
          "schemas",
          "network"
        ]
      },
      "ChallengeResponse": {
        "type": "object",
        "properties": {
          "challenge": {
            "type": "string"
          }
        },
        "required": [
          "challenge"
        ]
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "algo": {
            "type": "string",
            "enum": [
              "SR25519"
            ]
          },
          "encoding": {
            "type": "string",
            "enum": [
              "hex"
            ]
          },
          "encodedValue": {
            "type": "string"
          },
          "publicKey": {
            "type": "string"
          },
          "challenge": {
            "type": "string"
          }
        },
        "required": [
          "algo",
          "encodedValue",
          "encoding",
          "publicKey",
          "challenge"
        ]
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "expires": {
            "type": "integer"
          },
          "dsnpId": {
            "type": "string"
          }
        },
        "required": [
          "expires",
          "accessToken",
          "dsnpId"
        ]
      },
      "CreateIdentityRequest": {
        "type": "object",
        "properties": {
          "addProviderSignature": {
            "type": "string"
          },
          "algo": {
            "type": "string",
            "enum": [
              "SR25519"
            ]
          },
          "baseHandle": {
            "type": "string"
          },
          "encoding": {
            "type": "string",
            "enum": [
              "hex"
            ]
          },
          "expiration": {
            "type": "number"
          },
          "handleSignature": {
            "type": "string"
          },
          "publicKey": {
            "type": "string"
          }
        },
        "required": [
          "addProviderSignature",
          "algo",
          "baseHandle",
          "encoding",
          "expiration",
          "handleSignature",
          "publicKey"
        ]
      },
      "CreateIdentityResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "expires": {
            "type": "integer"
          }
        },
        "required": [
          "expires",
          "accessToken"
        ]
      },
      "AuthAccountResponse": {
        "type": "object",
        "properties": {
          "dsnpId": {
            "type": "string"
          },
          "displayHandle": {
            "type": "string"
          }
        },
        "required": [
          "dsnpId"
        ]
      },
      "DelegateRequest": {
        "type": "object",
        "properties": {
          "algo": {
            "type": "string",
            "enum": [
              "SR25519"
            ]
          },
          "encoding": {
            "type": "string",
            "enum": [
              "hex"
            ]
          },
          "encodedValue": {
            "type": "string"
          },
          "publicKey": {
            "type": "string"
          }
        },
        "required": [
          "algo",
          "encodedValue",
          "encoding",
          "publicKey"
        ]
      },
      "DelegateResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "expires": {
            "type": "integer"
          }
        },
        "required": [
          "expires",
          "accessToken"
        ]
      },
      "HandlesResponse": {
        "type": "object",
        "properties": {
          "publicKey": {
            "type": "string"
          },
          "handle": {
            "type": "string"
          }
        },
        "required": [
          "publicKey",
          "handle"
        ]
      },
      "PaginatedBroadcast": {
        "type": "object",
        "properties": {
          "newestBlockNumber": {
            "type": "integer"
          },
          "oldestBlockNumber": {
            "type": "integer"
          },
          "posts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BroadcastExtended"
            }
          }
        },
        "required": [
          "newestBlockNumber",
          "oldestBlockNumber",
          "posts"
        ]
      },
      "BroadcastExtended": {
        "type": "object",
        "properties": {
          "fromId": {
            "type": "string"
          },
          "contentHash": {
            "type": "string"
          },
          "content": {
            "description": "JSON-encoded Activity Content Note",
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "description": "Timestamp of the post"
          },
          "replies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReplyExtended"
            },
            "description": "Array of ReplyExtended objects"
          },
          "verifiedInteractions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "href": {
                  "type": "string"
                },
                "label": {
                  "type": "object",
                  "description": "Language map for label localization",
                  "minProperties": 1,
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "href",
                "label"
              ]
            }
          }
        },
        "required": [
          "fromId",
          "contentHash",
          "content",
          "timestamp"
        ]
      },
      "ReplyExtended": {
        "type": "object",
        "properties": {
          "fromId": {
            "type": "string"
          },
          "contentHash": {
            "type": "string"
          },
          "content": {
            "description": "JSON-encoded Activity Content Note",
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "description": "Timestamp of the post"
          },
          "replies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReplyExtended"
            },
            "description": "Array of ReplyExtended objects"
          }
        },
        "required": [
          "fromId",
          "contentHash",
          "content",
          "timestamp"
        ]
      },
      "CreatePostRequest": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string"
          },
          "inReplyTo": {
            "type": "string"
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "binary"
            }
          }
        },
        "required": ["content"]
      },
      "EditPostRequest": {
        "type": "object",
        "properties": {
          "targetContentHash": {
            "type": "string"
          },
          "targetAnnouncementType": {
            "type": "integer"
          },
          "content": {
            "type": "string"
          }
        },
        "required": [
          "content",
          "targetAnnouncementType",
          "targetContentHash"
        ]
      },
      "Profile": {
        "type": "object",
        "properties": {
          "fromId": {
            "type": "string"
          },
          "contentHash": {
            "type": "string"
          },
          "content": {
            "description": "JSON-encoded Activity Content Note",
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "description": "Timestamp of the post"
          },
          "displayHandle": {
            "type": "string"
          }
        },
        "required": [
          "fromId",
          "contentHash",
          "content",
          "timestamp"
        ]
      },
      "EditProfileRequest": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string"
          }
        },
        "required": [
          "content"
        ]
      },
      "InteractionRequest": {
        "type": "object",
        "properties": {
          "attributeSetType": {
            "type": "string"
          },
          "interactionId": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "reference": {
            "type": "object"
          }
        },
        "required": [
          "attributeSetType",
          "interactionId",
          "href",
          "reference"
        ]
      },
      "JsonLdContext": {
        "description": "Either a string, or an array containing strings and objects with string values",
        "oneOf": [
          {
            "type": "string"
          },
          {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              ]
            }
          }
        ]
      },
      "VerifiableCredentialWithoutProof": {
            "type": "object",
            "properties": {
              "@context": {
                "$ref": "#/components/schemas/JsonLdContext"
              },
              "id": {
                "type": "string"
              },
              "type": {
                "type": "array",
                "uniqueItems": true,
                "items": {
                  "type": "string"
                }
              },
              "issuer": {
                "type": "string"
              },
              "issuanceDate": {
                "type": "string"
              },
              "expirationDate": {
                "type": "string"
              },
              "credentialSchema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "VerifiableCredentialSchema2023",
                      "JsonSchema"
                    ]
                  },
                  "id": {
                    "type": "string",
                    "description": "URL of schema verifiable credential"
                  },
                  "digestSRI": {
                    "type": "string"
                  }
                },
                "required": [
                  "type",
                  "id"
                ]
              },
              "credentialSubject": {
                "type": "object",
                "properties": {
                },
                "required": [
                ]
              }
            },
            "required": [
              "@context",
              "type",
              "issuer",
              "issuanceDate",
              "credentialSchema",
              "credentialSubject"
            ]
      },
      "VerifiableCredentialWithEd25519Proof": {
        "allOf": [{"$ref": "#/components/schemas/VerifiableCredentialWithoutProof"}],
        "properties": {
          "proof": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "Ed25519Signature2020"
                ]
              },
              "verificationMethod": {
                "type": "string",
                "description": "URI of public key, e.g. dsnp://{yourMsa}#1"
              },
              "created": {
                "type": "string",
                "description": "ISO 8601 datetime, e.g. 2023-01-01T12:00:00.000Z"
              },
              "proofPurpose": {
                "type": "string",
                "enum": [
                  "assertionMethod"
                ]
              },
              "proofValue": {
                "type": "string",
                "description": "multibase-encoded signature"
              }
            },
            "required": [
              "type",
              "verificationMethod",
              "created",
              "proofPurpose",
              "proofValue"
            ]
          }
        },
        "required": [
          "proof"
        ]
      },
      "InteractionTicket": {
        "allOf": [{"$ref": "#/components/schemas/VerifiableCredentialWithEd25519Proof"}],
        "properties": {
          "credentialSubject": {
                "type": "object",
                "properties": {
                  "interactionId": {
                    "type": "string"
                  },
                  "href": {
                    "type": "string"
                  },
                  "reference": {
                    "type": "object"
                  }
                },
                "required": [
                  "interactionId",
                  "reference"
                ]
          }
        }
      },
      "InteractionResponse": {
        "type": "object",
        "properties": {
          "attributeSetType": {
            "type": "string"
          },
          "ticket": {
            "$ref": "#/components/schemas/VerifiableCredentialWithEd25519Proof"
          }
        },
        "required": [
          "attributeSetType",
          "ticket"
        ]
      }
    }
  }
}
